package com.medihelp.presupuesto.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SubPlanAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubPlanAllPropertiesEquals(SubPlan expected, SubPlan actual) {
        assertSubPlanAutoGeneratedPropertiesEquals(expected, actual);
        assertSubPlanAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubPlanAllUpdatablePropertiesEquals(SubPlan expected, SubPlan actual) {
        assertSubPlanUpdatableFieldsEquals(expected, actual);
        assertSubPlanUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubPlanAutoGeneratedPropertiesEquals(SubPlan expected, SubPlan actual) {
        assertThat(expected)
            .as("Verify SubPlan auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubPlanUpdatableFieldsEquals(SubPlan expected, SubPlan actual) {
        assertThat(expected)
            .as("Verify SubPlan relevant properties")
            .satisfies(e -> assertThat(e.getCodigo()).as("check codigo").isEqualTo(actual.getCodigo()))
            .satisfies(e -> assertThat(e.getNombre()).as("check nombre").isEqualTo(actual.getNombre()))
            .satisfies(e -> assertThat(e.getDescripcion()).as("check descripcion").isEqualTo(actual.getDescripcion()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSubPlanUpdatableRelationshipsEquals(SubPlan expected, SubPlan actual) {
        assertThat(expected)
            .as("Verify SubPlan relationships")
            .satisfies(e -> assertThat(e.getPlan()).as("check plan").isEqualTo(actual.getPlan()));
    }
}
